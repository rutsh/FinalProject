{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user1\\\\Documents\\\\\\u05D4\\u05E0\\u05D3\\u05E1\\u05D0\\u05D9\\u05DD \\u05D9\\u05D3\\\\React\\\\reactproject\\\\src\\\\components\\\\AddTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { tasksState } from '../data/atoms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddTask = () => {\n  _s();\n\n  const [tasks, setTasks] = useRecoilState(tasksState);\n  const formEl = useRef();\n  let newId;\n  if (tasks.length === 0) newId = 1;else newId = tasks[tasks.length - 1].id + 1;\n\n  const addNewTask = e => {\n    e.preventDefault();\n    const newTask = {\n      id: newId,\n      description: formEl.current.description.value,\n      done: false\n    };\n    console.log(newTask);\n    setTasks(oldTasks => [...oldTasks, { ...newTask\n    }]);\n    formEl.current.reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addNewTask,\n    ref: formEl,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"description\",\n      name: \"description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 76\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AddTask, \"boKA2wakLfA+d0+6Lk7+HRu5MVw=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["C:/Users/user1/Documents/הנדסאים יד/React/reactproject/src/components/AddTask.js"],"names":["React","useState","useRef","useRecoilState","tasksState","AddTask","tasks","setTasks","formEl","newId","length","id","addNewTask","e","preventDefault","newTask","description","current","value","done","console","log","oldTasks","reset"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,cAAc,CAACC,UAAD,CAAvC;AACA,QAAMI,MAAM,GAAGN,MAAM,EAArB;AACA,MAAIO,KAAJ;AACA,MAAGH,KAAK,CAACI,MAAN,KAAe,CAAlB,EACID,KAAK,GAAC,CAAN,CADJ,KAGIA,KAAK,GAACH,KAAK,CAACA,KAAK,CAACI,MAAN,GAAa,CAAd,CAAL,CAAsBC,EAAtB,GAAyB,CAA/B;;AACJ,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,OAAO,GAAG;AACZJ,MAAAA,EAAE,EAACF,KADS;AAEZO,MAAAA,WAAW,EAAER,MAAM,CAACS,OAAP,CAAeD,WAAf,CAA2BE,KAF5B;AAGZC,MAAAA,IAAI,EAAC;AAHO,KAAhB;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACAR,IAAAA,QAAQ,CAAEe,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAc,EAAC,GAAGP;AAAJ,KAAd,CAAf,CAAR;AACAP,IAAAA,MAAM,CAACS,OAAP,CAAeM,KAAf;AACH,GAXD;;AAaA,sBAAO;AAAM,IAAA,QAAQ,EAAEX,UAAhB;AAA4B,IAAA,GAAG,EAAEJ,MAAjC;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,aAA/B;AAA6C,MAAA,IAAI,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFG,oBAEgE;AAAA;AAAA;AAAA;AAAA,YAFhE,eAGH;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,CA1BM;;GAAMH,O;UACgBF,c;;;KADhBE,O","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { tasksState } from '../data/atoms';\r\n\r\nexport const AddTask = () => {\r\n    const [tasks,setTasks] = useRecoilState(tasksState);\r\n    const formEl = useRef();\r\n    let newId;\r\n    if(tasks.length===0)\r\n        newId=1;\r\n    else\r\n        newId=tasks[tasks.length-1].id+1;\r\n    const addNewTask = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const newTask = {\r\n            id:newId,\r\n            description: formEl.current.description.value,\r\n            done:false,\r\n        };\r\n        console.log(newTask);\r\n        setTasks((oldTasks) => [...oldTasks, {...newTask}]);\r\n        formEl.current.reset();\r\n    }\r\n    \r\n    return <form onSubmit={addNewTask} ref={formEl}>\r\n        <h3>Add Task</h3>\r\n        <input type=\"text\" placeholder=\"description\" name=\"description\" /> <br/>\r\n        <button type=\"submit\">Add Task</button>\r\n    </form>\r\n}"]},"metadata":{},"sourceType":"module"}